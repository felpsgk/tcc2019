/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.intelnalFrame;

import java.awt.Event;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import model.DAO.CapacidadeDAO;
import model.DAO.CursoDAO;
import model.Entity.Capacidade;

/**
 *
 * @author oem
 */
public class jTreeSaep extends javax.swing.JInternalFrame {

    /**
     * Creates new form jTreeSaep
     */
    //cria os modelos
    DefaultTreeModel dft;
    DefaultMutableTreeNode root;
    DefaultMutableTreeNode curso;
    DefaultMutableTreeNode categoriaCap;
    DefaultMutableTreeNode capacidade;
    DefaultMutableTreeNode basico;
    DefaultMutableTreeNode tecnico;
    DefaultMutableTreeNode gestao;
    Capacidade[] cap;

    public jTreeSaep() {
        initComponents();
//        popCbox();
        //CRIA PRIMEIRA PASTA PADRÃO JTREE
        root = new DefaultMutableTreeNode("Curso");
        //METODO QUE ADICIONA OS CURSOS E CAPACIDADES BASICA, TECNICA E GESTAO EM CADA UM
        addCurso();
        //SETA O MODELO ATE AQUI CRIADO
        dft = new DefaultTreeModel(root);
        //DA PARA A JTREE O MODELO SETADO
        treeTeste.setModel(dft);

        //EVENTO DE CLIQUE NA TREE APENAS NO NÍVEL DESEJADO
        treeTeste.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener() {

            @Override
            public void valueChanged(TreeSelectionEvent e) {
                DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) treeTeste.getLastSelectedPathComponent();
                if (selectedNode.getLevel() == 2) {
                    lblTeste.setText(selectedNode.getUserObject().toString());
                }
            }
        });

    }

    //PREENCHE COMBOBOX COM CAPACIDADES DO BANCO
//    private void popCbox() {
//        CapacidadeDAO dao = new CapacidadeDAO();
//
//        dao.findAll().forEach((ca) -> {
//            cboxCap.addItem(ca);
//        });
//
//    }
    private void addCurso() {
        CursoDAO dao = new CursoDAO();

        dao.findAll().forEach((c) -> {

            curso = new DefaultMutableTreeNode(c.toString());
            root.add(curso);
            basico = new DefaultMutableTreeNode("Básico");
            curso.add(basico);
            tecnico = new DefaultMutableTreeNode("Técnico");
            curso.add(tecnico);
            gestao = new DefaultMutableTreeNode("Gestão");
            curso.add(gestao);
            addCapacidade(c.getId());
        });
    }

    private void addCapacidade(long cursoId) {

        CapacidadeDAO dao = new CapacidadeDAO();

        dao.findAllCurso(cursoId).forEach((ca) -> {

            System.out.println(cap);
            switch (ca.getTipo()) {
                case 0:
                    categoriaCap = new DefaultMutableTreeNode(ca);
                    basico.add(categoriaCap);
                    break;
                case 1:
                    categoriaCap = new DefaultMutableTreeNode(ca);
                    tecnico.add(categoriaCap);
                    break;
                case 2:
                    categoriaCap = new DefaultMutableTreeNode(ca);
                    gestao.add(categoriaCap);
                    break;
                default:
                    break;
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        treeTeste = new javax.swing.JTree();
        lblTeste = new javax.swing.JLabel();

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        treeTeste.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane1.setViewportView(treeTeste);

        lblTeste.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(lblTeste)
                .addGap(81, 81, 81))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblTeste)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTeste;
    private javax.swing.JTree treeTeste;
    // End of variables declaration//GEN-END:variables
}
